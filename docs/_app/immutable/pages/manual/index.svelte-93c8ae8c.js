import{S as St,i as Ot,s as Vt,e as i,t as o,k as y,x as U,c as d,a as m,h as r,d as s,m as _,y as j,b as g,g as v,H as e,z as J,r as K,p as N,C as S}from"../../chunks/index-3d24b05e.js";import{C as Dt,a as Qt}from"../../chunks/CardBody-c9d0a4e2.js";function Xt(w){let a;return{c(){a=o(`Do not copy new versions of progs_dump over existing installations. It\u2019s always best to make a new folder and\r
        move any work-in-progress maps and assets there.`)},l(n){a=r(n,`Do not copy new versions of progs_dump over existing installations. It\u2019s always best to make a new folder and\r
        move any work-in-progress maps and assets there.`)},m(n,l){v(n,a,l)},d(n){n&&s(a)}}}function Zt(w){let a,n;return a=new Qt({props:{$$slots:{default:[Xt]},$$scope:{ctx:w}}}),{c(){U(a.$$.fragment)},l(l){j(a.$$.fragment,l)},m(l,u){J(a,l,u),n=!0},p(l,u){const k={};u&1&&(k.$$scope={dirty:u,ctx:l}),a.$set(k)},i(l){n||(K(a.$$.fragment,l),n=!0)},o(l){N(a.$$.fragment,l),n=!1},d(l){S(a,l)}}}function eo(w){let a;return{c(){a=o("Please read progs_dump-3.0.0-README.txt for important info and any last minute changes.")},l(n){a=r(n,"Please read progs_dump-3.0.0-README.txt for important info and any last minute changes.")},m(n,l){v(n,a,l)},d(n){n&&s(a)}}}function to(w){let a,n;return a=new Qt({props:{$$slots:{default:[eo]},$$scope:{ctx:w}}}),{c(){U(a.$$.fragment)},l(l){j(a.$$.fragment,l)},m(l,u){J(a,l,u),n=!0},p(l,u){const k={};u&1&&(k.$$scope={dirty:u,ctx:l}),a.$set(k)},i(l){n||(K(a.$$.fragment,l),n=!0)},o(l){N(a.$$.fragment,l),n=!1},d(l){S(a,l)}}}function oo(w){let a;return{c(){a=o("Remove any cfg files, screenshots or save game files before zipping up your mod folder!")},l(n){a=r(n,"Remove any cfg files, screenshots or save game files before zipping up your mod folder!")},m(n,l){v(n,a,l)},d(n){n&&s(a)}}}function ro(w){let a,n;return a=new Qt({props:{$$slots:{default:[oo]},$$scope:{ctx:w}}}),{c(){U(a.$$.fragment)},l(l){j(a.$$.fragment,l)},m(l,u){J(a,l,u),n=!0},p(l,u){const k={};u&1&&(k.$$scope={dirty:u,ctx:l}),a.$set(k)},i(l){n||(K(a.$$.fragment,l),n=!0)},o(l){N(a.$$.fragment,l),n=!1},d(l){S(a,l)}}}function ao(w){let a,n,l,u,k,f,$,Ee,O,be,Me,V,Te,Ie,De,Qe,A,Ce,qe,xe,Q,ze,b,Le,X,Fe,Ge,Z,Pe,Ae,ee,Be,Re,We,C,He,te,Ye,Ue,je,q,Je,x,Ke,oe,Ne,Se,Oe,B,Ve,ce,fe,pe,he,ye,P,Xe,_e,h,M,Ze,re,et,tt,ae,ot,rt,se,at,st,lt,z,nt,le,it,dt,mt,L,ut,ne,ct,ft,pt,I,ht,ie,yt,_t,R,vt,$t,gt,D,wt,de,kt,Et,me,bt,Mt,Tt,W,It,ve;return u=new Dt({props:{classes:"bg-warning",$$slots:{default:[Zt]},$$scope:{ctx:w}}}),Q=new Dt({props:{classes:"bg-error",$$slots:{default:[to]},$$scope:{ctx:w}}}),q=new Dt({props:{color:"warning",$$slots:{default:[ro]},$$scope:{ctx:w}}}),{c(){a=i("h1"),n=o("Installation"),l=y(),U(u.$$.fragment),k=y(),f=i("ol"),$=i("li"),Ee=o("Unzip the "),O=i("em"),be=o("progs_dump"),Me=o(" archive into your Quake folder. This will create a "),V=i("em"),Te=o("pd_300"),Ie=o(` folder inside.\r
        This directory will be a learning tool and reference for the features of the dev kit. Play it like any other\r
        Quake mod using the start map to explore a hub with sample maps.\r
        `),De=i("br"),Qe=o(`\r
        The `),A=i("a"),Ce=o("development folder"),qe=o(` contains the FGD and DEF files that allow JACK,\r
        TrenchBroom and other editors to use the features of the devkit. Please refer to your map editor documentation\r
        for information on how to load mods and FGD files. In addition, there is a wad file that you can use to load the\r
        textures used in the sample maps. The QuakeC source code is included as well.`),xe=y(),U(Q.$$.fragment),ze=y(),b=i("li"),Le=o("When you are ready to create your own mod, unzip the "),X=i("em"),Fe=o("mod_template.zip"),Ge=o(` into your Quake directory and\r
        rename the `),Z=i("em"),Pe=o("my_mod"),Ae=o(` folder to the name of your mod (lowercase with no spaces). This folder is a stripped\r
        down version of `),ee=i("em"),Be=o("progs_dump"),Re=o(` without the sample maps and other files. However, the new models, sounds,\r
        sprites, progs.dat and QuakeC source code are included.`),We=y(),C=i("li"),He=o("When you are ready to release your mod, zip up your mod directory and make sure to include the "),te=i("em"),Ye=o("progs_dump-devkit-readme.txt"),Ue=o(`\r
        file and the QuakeC source folders in your release. If you modify the QuakeC code, make sure and include that\r
        version in your zip instead of the original QuakeC files.`),je=y(),U(q.$$.fragment),Je=y(),x=i("li"),Ke=o("Please do not include the original "),oe=i("em"),Ne=o("progs_dump"),Se=o(` sample maps in your mod. But feel free to use the entity\r
        setups from the samples and prefab maps in your own projects. e.g. particle effects or custom monster entities.`),Oe=y(),B=i("li"),Ve=o("Make sure and share your work on the progs_dump dev Discord."),ce=o(`\r
Good luck and happy modding!\r
`),fe=i("br"),pe=y(),he=i("br"),ye=y(),P=i("h3"),Xe=o("Development Notes"),_e=y(),h=i("ul"),M=i("li"),Ze=o("You can launch Quake with "),re=i("em"),et=o("-nomonsters"),tt=o(` on the command line to disable monsters in your map for testing. You can also set\r
        `),ae=i("em"),ot=o("nomonsters"),rt=o(" to 1 in the console and enter "),se=i("em"),at=o("restart"),st=o(" to relaunch your current map without monsters."),lt=y(),z=i("li"),nt=o("To check what version of the dev kit you are running, type "),le=i("em"),it=o("impulse 100"),dt=o(" in the console."),mt=y(),L=i("li"),ut=o("While using the "),ne=i("em"),ct=o("noclip"),ft=o(" command, you will not collide with item pickups and many triggers."),pt=y(),I=i("li"),ht=o("The cheat code "),ie=i("em"),yt=o("impulse 9"),_t=o(" will give the player any "),R=i("a"),vt=o("custom keys"),$t=o(" used in the current map in addition to all ammo, weapons and standard keys."),gt=y(),D=i("li"),wt=o("Triggers that feature the "),de=i("em"),kt=o("message"),Et=o(" key have a new spawnflag "),me=i("em"),bt=o("Message All Players"),Mt=o(". This is useful for co-op gameplay if it\u2019s important that every player get the message."),Tt=y(),W=i("li"),It=o("The FGDs are not included in the my_mod folder since they aren\u2019t required to play your mod. For more info on loading FGDs, refer to the documentation for your editor of choice."),this.h()},l(t){a=d(t,"H1",{});var c=m(a);n=r(c,"Installation"),c.forEach(s),l=_(t),j(u.$$.fragment,t),k=_(t),f=d(t,"OL",{});var p=m(f);$=d(p,"LI",{class:!0});var E=m($);Ee=r(E,"Unzip the "),O=d(E,"EM",{});var ue=m(O);be=r(ue,"progs_dump"),ue.forEach(s),Me=r(E," archive into your Quake folder. This will create a "),V=d(E,"EM",{});var Ct=m(V);Te=r(Ct,"pd_300"),Ct.forEach(s),Ie=r(E,` folder inside.\r
        This directory will be a learning tool and reference for the features of the dev kit. Play it like any other\r
        Quake mod using the start map to explore a hub with sample maps.\r
        `),De=d(E,"BR",{}),Qe=r(E,`\r
        The `),A=d(E,"A",{href:!0});var qt=m(A);Ce=r(qt,"development folder"),qt.forEach(s),qe=r(E,` contains the FGD and DEF files that allow JACK,\r
        TrenchBroom and other editors to use the features of the devkit. Please refer to your map editor documentation\r
        for information on how to load mods and FGD files. In addition, there is a wad file that you can use to load the\r
        textures used in the sample maps. The QuakeC source code is included as well.`),E.forEach(s),xe=_(p),j(Q.$$.fragment,p),ze=_(p),b=d(p,"LI",{class:!0});var F=m(b);Le=r(F,"When you are ready to create your own mod, unzip the "),X=d(F,"EM",{});var xt=m(X);Fe=r(xt,"mod_template.zip"),xt.forEach(s),Ge=r(F,` into your Quake directory and\r
        rename the `),Z=d(F,"EM",{});var zt=m(Z);Pe=r(zt,"my_mod"),zt.forEach(s),Ae=r(F,` folder to the name of your mod (lowercase with no spaces). This folder is a stripped\r
        down version of `),ee=d(F,"EM",{});var Lt=m(ee);Be=r(Lt,"progs_dump"),Lt.forEach(s),Re=r(F,` without the sample maps and other files. However, the new models, sounds,\r
        sprites, progs.dat and QuakeC source code are included.`),F.forEach(s),We=_(p),C=d(p,"LI",{class:!0});var $e=m(C);He=r($e,"When you are ready to release your mod, zip up your mod directory and make sure to include the "),te=d($e,"EM",{});var Ft=m(te);Ye=r(Ft,"progs_dump-devkit-readme.txt"),Ft.forEach(s),Ue=r($e,`\r
        file and the QuakeC source folders in your release. If you modify the QuakeC code, make sure and include that\r
        version in your zip instead of the original QuakeC files.`),$e.forEach(s),je=_(p),j(q.$$.fragment,p),Je=_(p),x=d(p,"LI",{class:!0});var ge=m(x);Ke=r(ge,"Please do not include the original "),oe=d(ge,"EM",{});var Gt=m(oe);Ne=r(Gt,"progs_dump"),Gt.forEach(s),Se=r(ge,` sample maps in your mod. But feel free to use the entity\r
        setups from the samples and prefab maps in your own projects. e.g. particle effects or custom monster entities.`),ge.forEach(s),Oe=_(p),B=d(p,"LI",{class:!0});var Pt=m(B);Ve=r(Pt,"Make sure and share your work on the progs_dump dev Discord."),Pt.forEach(s),p.forEach(s),ce=r(t,`\r
Good luck and happy modding!\r
`),fe=d(t,"BR",{}),pe=_(t),he=d(t,"BR",{}),ye=_(t),P=d(t,"H3",{id:!0});var At=m(P);Xe=r(At,"Development Notes"),At.forEach(s),_e=_(t),h=d(t,"UL",{});var T=m(h);M=d(T,"LI",{class:!0});var G=m(M);Ze=r(G,"You can launch Quake with "),re=d(G,"EM",{});var Bt=m(re);et=r(Bt,"-nomonsters"),Bt.forEach(s),tt=r(G,` on the command line to disable monsters in your map for testing. You can also set\r
        `),ae=d(G,"EM",{});var Rt=m(ae);ot=r(Rt,"nomonsters"),Rt.forEach(s),rt=r(G," to 1 in the console and enter "),se=d(G,"EM",{});var Wt=m(se);at=r(Wt,"restart"),Wt.forEach(s),st=r(G," to relaunch your current map without monsters."),G.forEach(s),lt=_(T),z=d(T,"LI",{class:!0});var we=m(z);nt=r(we,"To check what version of the dev kit you are running, type "),le=d(we,"EM",{});var Ht=m(le);it=r(Ht,"impulse 100"),Ht.forEach(s),dt=r(we," in the console."),we.forEach(s),mt=_(T),L=d(T,"LI",{class:!0});var ke=m(L);ut=r(ke,"While using the "),ne=d(ke,"EM",{});var Yt=m(ne);ct=r(Yt,"noclip"),Yt.forEach(s),ft=r(ke," command, you will not collide with item pickups and many triggers."),ke.forEach(s),pt=_(T),I=d(T,"LI",{class:!0});var H=m(I);ht=r(H,"The cheat code "),ie=d(H,"EM",{});var Ut=m(ie);yt=r(Ut,"impulse 9"),Ut.forEach(s),_t=r(H," will give the player any "),R=d(H,"A",{href:!0});var jt=m(R);vt=r(jt,"custom keys"),jt.forEach(s),$t=r(H," used in the current map in addition to all ammo, weapons and standard keys."),H.forEach(s),gt=_(T),D=d(T,"LI",{class:!0});var Y=m(D);wt=r(Y,"Triggers that feature the "),de=d(Y,"EM",{});var Jt=m(de);kt=r(Jt,"message"),Jt.forEach(s),Et=r(Y," key have a new spawnflag "),me=d(Y,"EM",{});var Kt=m(me);bt=r(Kt,"Message All Players"),Kt.forEach(s),Mt=r(Y,". This is useful for co-op gameplay if it\u2019s important that every player get the message."),Y.forEach(s),Tt=_(T),W=d(T,"LI",{class:!0});var Nt=m(W);It=r(Nt,"The FGDs are not included in the my_mod folder since they aren\u2019t required to play your mod. For more info on loading FGDs, refer to the documentation for your editor of choice."),Nt.forEach(s),T.forEach(s),this.h()},h(){g(A,"href","/manual/devfolder"),g($,"class","svelte-mspql0"),g(b,"class","svelte-mspql0"),g(C,"class","svelte-mspql0"),g(x,"class","svelte-mspql0"),g(B,"class","svelte-mspql0"),g(P,"id","dev-notes"),g(M,"class","svelte-mspql0"),g(z,"class","svelte-mspql0"),g(L,"class","svelte-mspql0"),g(R,"href","/manual/keys"),g(I,"class","svelte-mspql0"),g(D,"class","svelte-mspql0"),g(W,"class","svelte-mspql0")},m(t,c){v(t,a,c),e(a,n),v(t,l,c),J(u,t,c),v(t,k,c),v(t,f,c),e(f,$),e($,Ee),e($,O),e(O,be),e($,Me),e($,V),e(V,Te),e($,Ie),e($,De),e($,Qe),e($,A),e(A,Ce),e($,qe),e(f,xe),J(Q,f,null),e(f,ze),e(f,b),e(b,Le),e(b,X),e(X,Fe),e(b,Ge),e(b,Z),e(Z,Pe),e(b,Ae),e(b,ee),e(ee,Be),e(b,Re),e(f,We),e(f,C),e(C,He),e(C,te),e(te,Ye),e(C,Ue),e(f,je),J(q,f,null),e(f,Je),e(f,x),e(x,Ke),e(x,oe),e(oe,Ne),e(x,Se),e(f,Oe),e(f,B),e(B,Ve),v(t,ce,c),v(t,fe,c),v(t,pe,c),v(t,he,c),v(t,ye,c),v(t,P,c),e(P,Xe),v(t,_e,c),v(t,h,c),e(h,M),e(M,Ze),e(M,re),e(re,et),e(M,tt),e(M,ae),e(ae,ot),e(M,rt),e(M,se),e(se,at),e(M,st),e(h,lt),e(h,z),e(z,nt),e(z,le),e(le,it),e(z,dt),e(h,mt),e(h,L),e(L,ut),e(L,ne),e(ne,ct),e(L,ft),e(h,pt),e(h,I),e(I,ht),e(I,ie),e(ie,yt),e(I,_t),e(I,R),e(R,vt),e(I,$t),e(h,gt),e(h,D),e(D,wt),e(D,de),e(de,kt),e(D,Et),e(D,me),e(me,bt),e(D,Mt),e(h,Tt),e(h,W),e(W,It),ve=!0},p(t,[c]){const p={};c&1&&(p.$$scope={dirty:c,ctx:t}),u.$set(p);const E={};c&1&&(E.$$scope={dirty:c,ctx:t}),Q.$set(E);const ue={};c&1&&(ue.$$scope={dirty:c,ctx:t}),q.$set(ue)},i(t){ve||(K(u.$$.fragment,t),K(Q.$$.fragment,t),K(q.$$.fragment,t),ve=!0)},o(t){N(u.$$.fragment,t),N(Q.$$.fragment,t),N(q.$$.fragment,t),ve=!1},d(t){t&&s(a),t&&s(l),S(u,t),t&&s(k),t&&s(f),S(Q),S(q),t&&s(ce),t&&s(fe),t&&s(pe),t&&s(he),t&&s(ye),t&&s(P),t&&s(_e),t&&s(h)}}}class no extends St{constructor(a){super(),Ot(this,a,null,ao,Vt,{})}}export{no as default};
